// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_ARMENGINE_PPL_NN_PMX_ARM_H_
#define FLATBUFFERS_GENERATED_ARMENGINE_PPL_NN_PMX_ARM_H_

#include "flatbuffers/flatbuffers.h"

namespace ppl {
namespace nn {
namespace pmx {
namespace arm {

struct ArmEngineParam;
struct ArmEngineParamBuilder;

struct ArmEngineParam FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef ArmEngineParamBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct ArmEngineParamBuilder {
  typedef ArmEngineParam Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit ArmEngineParamBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<ArmEngineParam> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<ArmEngineParam>(end);
    return o;
  }
};

inline flatbuffers::Offset<ArmEngineParam> CreateArmEngineParam(
    flatbuffers::FlatBufferBuilder &_fbb) {
  ArmEngineParamBuilder builder_(_fbb);
  return builder_.Finish();
}

inline const ppl::nn::pmx::arm::ArmEngineParam *GetArmEngineParam(const void *buf) {
  return flatbuffers::GetRoot<ppl::nn::pmx::arm::ArmEngineParam>(buf);
}

inline const ppl::nn::pmx::arm::ArmEngineParam *GetSizePrefixedArmEngineParam(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<ppl::nn::pmx::arm::ArmEngineParam>(buf);
}

inline bool VerifyArmEngineParamBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<ppl::nn::pmx::arm::ArmEngineParam>(nullptr);
}

inline bool VerifySizePrefixedArmEngineParamBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<ppl::nn::pmx::arm::ArmEngineParam>(nullptr);
}

inline void FinishArmEngineParamBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ppl::nn::pmx::arm::ArmEngineParam> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedArmEngineParamBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<ppl::nn::pmx::arm::ArmEngineParam> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace arm
}  // namespace pmx
}  // namespace nn
}  // namespace ppl

#endif  // FLATBUFFERS_GENERATED_ARMENGINE_PPL_NN_PMX_ARM_H_
